version: "3.7"
services:
  mysql:
    image: mysql:8
    container_name: ssps-mysql
    environment:
      MYSQL_DATABASE: 'ssps-db'
      MYSQL_ROOT_PASSWORD: 'root-password'
      MYSQL_USER: 'ssps-user'
      MYSQL_PASSWORD: 'ssps-password'
    ports:
      - 3306
    networks:
      - ssps
    volumes:
      - ./docker/mysql:/etc/mysql/conf.d

#  php:
#    build: ./docker/php
#    container_name: ssps-php
#    env_file:
#      - docker.env
#      - docker.env.local
#    networks:
#      - ssps
#    volumes:
#      - ~/.composer:/home/.composer
#      - ./docker/data/history:/home/.bash_history
#      - ./docker/php/config/bashrc:/home/.bashrc
#      - ./docker/php/config/bash_aliases:/home/.bash_aliases
#      - ./:/srv/

#  nginx:
#    image: nginx:1.15.9-alpine
#    container_name: ssps-nginx
#    networks:
#      - ssps
#    expose:
#      - 443
#    depends_on:
#      - php
#    volumes:
#      - ./docker/nginx/vhost.conf:/etc/nginx/conf.d/default.conf:ro
#      - ./docker/certs:/etc/nginx/certs
#      - ./:/srv/:ro

  php-serv:
    image: dunglas/frankenphp:latest
    container_name: ssps-php-serv
    volumes:
      - ./:/app
    ports:
      - "80:80"
      - "443:443"
    networks:
      - ssps

  node:
    image: node:18
    container_name: ssps-node
    working_dir: /srv
    environment:
      NODE_ENV: dev
    volumes:
      - ./:/srv/
    command: echo "node service disabled" && /bin/true

networks:
  ssps:
    name: ssps
    external: false

volumes:
  db: ~
